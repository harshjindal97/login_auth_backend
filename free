import jwt from 'jsonwebtoken';
import userModel from '../models/user.js';
import dotenv from 'dotenv';


var checkUserAuth = async (req, res, next) => {
    const { autherentication } = req.headers;

    let token;

    if (autherentication) {
        console.log("inside");

        try {
            token = autherentication.split(' ')[1];

            // verify tokens && autherentication.startWith('Bearer')

            const { user_id } = jwt.verify(token, process.env.JsonTokenKey);

            // Get User from Token
            req.user = await userModel.findById(user_id).select('-password')

            next()

        } catch (error) {
            res.status(401).send({ "status": "failed", "message": "Unauthorized User" });
        }
    }

    if (!token) {
        res.status(401).send({ "status": "failed", "message": "Unauthorized User, No Token" })
    }

}


export default checkUserAuth;
